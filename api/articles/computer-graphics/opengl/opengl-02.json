{"title":"OpenGL - What is OpenGL?","uid":"53754339a6fb973dc05deaeaa99e1d0f","slug":"computer-graphics/opengl/opengl-02","date":"2022-08-07T07:32:29.000Z","updated":"2022-08-16T08:21:58.286Z","comments":true,"path":"api/articles/computer-graphics/opengl/opengl-02.json","keywords":null,"cover":null,"content":"<h1 id=\"What-is-OpenGL\"><a href=\"#What-is-OpenGL\" class=\"headerlink\" title=\"What is OpenGL?\"></a>What is OpenGL?</h1><p>OpenGL is mainly considered an API (an Application Programming Interface) that provides us with a large set of functions that we can use to manipulate graphics and images. However, OpenGL by itself is not an API, but merely a specification, developed and maintained by the Khronos Group.</p>\n<h2 id=\"What-is-Khronos-Group\"><a href=\"#What-is-Khronos-Group\" class=\"headerlink\" title=\"What is Khronos Group?\"></a>What is Khronos Group?</h2><p>Khronos Group团队成立于 2000 年 1 月，由包括 3Dlabs, ATI, Discreet, Evans &amp; Sutherland, Intel, Nvidia, SGI 和 Sun Microsystems 在内的多家国际知名多媒体行业领导者创立，致力于发展开放标准的应用程序接口 API ，以实现在多种平台和终端设备上的富媒体创作、加速和回放。</p>\n<h2 id=\"Core-profile-vs-Immediate-mode\"><a href=\"#Core-profile-vs-Immediate-mode\" class=\"headerlink\" title=\"Core-profile vs Immediate mode\"></a>Core-profile vs Immediate mode</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>摘录自<a href=\"https://blog.csdn.net/weixin_42887343/article/details/122681819\">Opengl的核心模式与立即渲染模式</a></p></blockquote>\n<p>早期的OpenGL使用立即渲染模式（Immediate mode，也就是固定渲染管线），这个模式下绘制图形很方便。<br>OpenGL的大多数功能都被库隐藏起来，开发者很少有控制OpenGL如何进行计算的自由。而开发者迫切希望能有更多的灵活性。随着时间推移，规范越来越灵活，开发者对绘图细节有了更多的掌控。</p>\n<p>立即渲染模式确实容易使用和理解，但是效率太低。因此从OpenGL3.2开始，规范文档开始废弃立即渲染模式，并鼓励开发者在OpenGL的核心模式(Core-profile)下进行开发，这个分支的规范完全移除了旧的特性。<br>当使用OpenGL的核心模式时，OpenGL迫使我们使用现代的函数。当我们试图使用一个已废弃的函数时，OpenGL会抛出一个错误并终止绘图。现代函数的优势是更高的灵活性和效率，然而也更难于学习。立即渲染模式从OpenGL实际运作中抽象掉了很多细节，因此它在易于学习的同时，也很难让人去把握OpenGL具体是如何运作的。现代函数要求使用者真正理解OpenGL和图形编程，它有一些难度，然而提供了更多的灵活性，更高的效率，更重要的是可以更深入的理解图形编程。</p>\n<h2 id=\"Extensions\"><a href=\"#Extensions\" class=\"headerlink\" title=\"Extensions\"></a>Extensions</h2><p>OpenGL支持直接使用拓展，有时候图形厂商可能在驱动中提供了新特性(更高效或便捷)，而这些特性不存在现有OpenGL中。但是照样可以通过拓展方式去使用他们，这样就无需等待OpenGL的新版本支持。<br>如果此类特性足够流行好用，OpenGL也会在新版本中支持他们。</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">if(GL_ARB_extension_name)   &#x2F;&#x2F; 拓展名\n&#123;\n    &#x2F;&#x2F; Do cool new and modern stuff supported by hardware\n&#125;\nelse\n&#123;\n    &#x2F;&#x2F; Extension not supported: do it the old way\n&#125;</code></pre>\n\n<h2 id=\"State-Machine\"><a href=\"#State-Machine\" class=\"headerlink\" title=\"State Machine\"></a>State Machine</h2><p>OpenGL采用状态机编程。用一系列变量描述OpenGL当前状态，通常这些状态集合，我们称为OpenGL上下文。</p>\n<h2 id=\"Objects\"><a href=\"#Objects\" class=\"headerlink\" title=\"Objects\"></a>Objects</h2><p>OpenGL库是由C编写，同时有其他语言的派生版本。但是其核心仍然是C编写的，由于C无法很好地转换为其他语言，所以在OpenGL中抽象了很多结构来应对这个问题。 Objects就是其中一种抽象结构。<br>一个object就是一系列OpenGL状态的集合</p>\n","text":"What is OpenGL?OpenGL is mainly considered an API (an Application Programming Interface) that provides us with a large set of functions that...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"ComputerGraphics","slug":"ComputerGraphics","count":5,"path":"api/tags/ComputerGraphics.json"},{"name":"OpenGL","slug":"OpenGL","count":4,"path":"api/tags/OpenGL.json"},{"name":"C++","slug":"C","count":4,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#What-is-OpenGL\"><span class=\"toc-text\">What is OpenGL?</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#What-is-Khronos-Group\"><span class=\"toc-text\">What is Khronos Group?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Core-profile-vs-Immediate-mode\"><span class=\"toc-text\">Core-profile vs Immediate mode</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Extensions\"><span class=\"toc-text\">Extensions</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#State-Machine\"><span class=\"toc-text\">State Machine</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Objects\"><span class=\"toc-text\">Objects</span></a></li></ol></li></ol>","author":{"name":"Stephen Ling","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Think twice, code once!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"OpenGL - Creating a window","uid":"28d97a9714322db76ed5f13f13ad12ec","slug":"computer-graphics/opengl/opengl-03","date":"2022-08-07T08:46:26.000Z","updated":"2022-08-16T08:21:58.286Z","comments":true,"path":"api/articles/computer-graphics/opengl/opengl-03.json","keywords":null,"cover":[],"text":"Creating a window创建窗口是第一步，然而OpenGL仅仅是定义了一系列关于窗口的操作api，而这些操作api实际执行和操作系统和硬件都有很大关系。这也意味着开发者必须自己处理这些问题。 不过，幸运的是我们可以使用一些库来避免自己处理这些问题。例如GLUT,GLFW...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"ComputerGraphics","slug":"ComputerGraphics","count":5,"path":"api/tags/ComputerGraphics.json"},{"name":"OpenGL","slug":"OpenGL","count":4,"path":"api/tags/OpenGL.json"},{"name":"C++","slug":"C","count":4,"path":"api/tags/C.json"}],"author":{"name":"Stephen Ling","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Think twice, code once!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"OpenGL - setting up","uid":"400c2cc982fad3284e2cd765c0295fa5","slug":"computer-graphics/opengl/opengl-01","date":"2022-07-26T14:37:56.000Z","updated":"2022-08-16T08:21:58.286Z","comments":true,"path":"api/articles/computer-graphics/opengl/opengl-01.json","keywords":null,"cover":[],"text":"OpenGL - setting upplatform: Ubuntu 22.04 Installing GLFW + OpenGL + GLEW# 安装opengl、glfw、glew库 sudo apt install libglfw3 libglfw3-dev libope...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"computer-graphics","slug":"computer-graphics","count":2,"path":"api/categories/computer-graphics.json"},{"name":"opengl","slug":"computer-graphics/opengl","count":1,"path":"api/categories/computer-graphics/opengl.json"}],"tags":[{"name":"ComputerGraphics","slug":"ComputerGraphics","count":5,"path":"api/tags/ComputerGraphics.json"},{"name":"OpenGL","slug":"OpenGL","count":4,"path":"api/tags/OpenGL.json"},{"name":"C++","slug":"C","count":4,"path":"api/tags/C.json"}],"author":{"name":"Stephen Ling","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Think twice, code once!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}